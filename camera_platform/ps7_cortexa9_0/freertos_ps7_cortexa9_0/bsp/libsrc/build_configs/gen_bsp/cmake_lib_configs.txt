-- Configuring done
-- Generating done
-- Build files have been written to: /home/test/Projects/CameraZynq/camera_platform/ps7_cortexa9_0/freertos_ps7_cortexa9_0/bsp/libsrc/build_configs/gen_bsp
-- Cache values
// Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...
CMAKE_BUILD_TYPE:STRING=

// Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr/local

// Size
CMAKE_SIZE:FILEPATH=arm-none-eabi-size

// Specs file path for using CMAKE toolchain files
CMAKE_SPECS_FILE:STRING=/home/test/Projects/CameraZynq/camera_platform/ps7_cortexa9_0/freertos_ps7_cortexa9_0/bsp/Xilinx.spec

// Device Id
DEVICE_ID:STRING=7z020

// The directory containing a CMake configuration file for INTC.
INTC_DIR:PATH=INTC_DIR-NOTFOUND

// MAC Instances
MAC_INSTANCES:STRING=ps7_ethernet_1

// Non Yocto embeddedsw FLOW
NON_YOCTO:BOOL=ON

// Number of slrs
NUMBER_OF_SLRS:STRING=0x1

// ASM FLAGS
TOOLCHAIN_ASM_FLAGS:STRING= -O2 -DSDT -mcpu=cortex-a9 -mfpu=vfpv3 -mfloat-abi=hard

// CXXFLAGS
TOOLCHAIN_CXX_FLAGS:STRING= -O2 -DSDT -mcpu=cortex-a9 -mfpu=vfpv3 -mfloat-abi=hard

// CFLAGS
TOOLCHAIN_C_FLAGS:STRING= -O2 -DSDT -mcpu=cortex-a9 -mfpu=vfpv3 -mfloat-abi=hard

// Flags used by compiler to generate dependency files
TOOLCHAIN_DEP_FLAGS:STRING= -MMD -MP

// Extra CFLAGS
TOOLCHAIN_EXTRA_C_FLAGS:STRING= -g -Wall -Wextra -fno-tree-loop-distribute-patterns

// 0:Disable exFAT, 1:Enable exFAT(Also Enables LFN)
XILFFS_enable_exfat:BOOL=OFF

// 0:Single partition, 1:Enable multiple partition
XILFFS_enable_multi_partition:BOOL=OFF

// Enables file system with selected interface. Enter 1 for SD. Enter 2 for RAM
XILFFS_fs_interface:STRING=1

// Number of volumes (logical drives, from 1 to 10) to be used.
XILFFS_num_logical_vol:STRING=2

// RAM FS size
XILFFS_ramfs_size:STRING=3145728

// RAM FS start address
XILFFS_ramfs_start_addr:STRING=

// Enables the file system in Read_Only mode if true. ZynqMP fsbl will set this to true
XILFFS_read_only:BOOL=OFF

// Configures relative path feature (valid values 0 to 2).
XILFFS_set_fs_rpath:STRING=0

// Enables use of CHMOD functionality for changing attributes (valid only with read_only set to false)
XILFFS_use_chmod:BOOL=OFF

// Enables the Long File Name(LFN) support if non-zero. Disabled by default: 0, LFN with static working buffer: 1, Dynamic working buffer: 2 (on stack) or 3 (on heap)
XILFFS_use_lfn:STRING=0

// Disable(0) or Enable(1) f_mkfs function. ZynqMP fsbl will set this to false
XILFFS_use_mkfs:BOOL=ON

// Enables the string functions (valid values 0 to 2).
XILFFS_use_strfunc:STRING=0

// Enables word access for misaligned memory access platform
XILFFS_word_access:BOOL=ON

// Enable Interval Timer
XILTIMER_en_interval_timer:BOOL=OFF

// This parameter is used to select specific timer for sleep functionality
XILTIMER_sleep_timer:STRING=ps7_ttc_0

// This parameter is used to select specific timer for tick functionality
XILTIMER_tick_timer:STRING=ps7_scutimer_0

// Set to 0 for no overflow checking. Set to 1 to include basic run time task stack checking.  Set to 2 to include more comprehensive run time task stack checking.
freertos_check_for_stack_overflow:STRING=2

// Set to 1 generate runtime stats for tasks.
freertos_generate_runtime_stats:STRING=0x0

// Set to true if the Idle task should yield if another idle priority task is able to run, or false if the idle task should always use its entire time slice unless it is preempted.
freertos_idle_yield:BOOL=ON

// The maximum interrupt priority from which interrupt safe FreeRTOS API calls can be made.
freertos_max_api_call_interrupt_priority:STRING=18

// The number of task priorities that will be available.  Priorities can be assigned from zero to (freertos_max_priorities - 1
freertos_max_priorities:STRING=8

// The maximum number of characters that can be in the name of a task.
freertos_max_task_name:STRING=10

// Set to true to include message buffer functionality, or false to exclude message buffer functionality.
freertos_message_buffer:BOOL=OFF

// The size of the stack allocated to the Idle task. Also used by standard demo and test tasks found in the main FreeRTOS download.
freertos_minimal_stack_size:STRING=200

// Sets the number of pointers each task has to store thread local values.
freertos_num_thread_local_storage_pointers:STRING=0x0

// The maximum number of queues that can be registered at any one time. Only registered queues can be viewed in the Eclipse/GDB kernel aware debugger plug-in.
freertos_queue_registry_size:STRING=10

// Set to true to include stream buffer functionality, or false to exclude stream buffer functionality.
freertos_stream_buffer:BOOL=OFF

// Set to true to allocate memory statically, or false to allocate memory dynamically.
freertos_support_static_allocation:BOOL=OFF

// Number of RTOS ticks per sec
freertos_tick_rate:STRING=100

// The number of commands the timer command queue can hold at any one time.
freertos_timer_command_queue_length:STRING=10

// Applicable only for R5. Selects the ttc module from which a counter will be used as the freertos tick source.
freertos_timer_select:STRING=psu_ttc_0

// Applicable only for R5. Selects the ttc counter number inside the selected ttc module to be used as the freertos tick source.
freertos_timer_select_counter:STRING=0x0

// The priority at which the software timer service/daemon task will execute.
freertos_timer_task_priority:STRING=configMAX_PRIORITIES-1

// The size of the stack allocated to the timer service/daemon task.
freertos_timer_task_stack_depth:STRING=configMINIMAL_STACK_SIZE

// Sets the amount of RAM reserved for use by FreeRTOS - used when tasks, queues, semaphores and event groups are created.
freertos_total_heap_size:STRING=65536

// Set to true to include counting semaphore functionality, or false to exclude recursive mutex functionality.
freertos_use_counting_semaphores:BOOL=ON

// Set true for kernel to call vApplicationDaemonTaskStartupHook on first iteration of RTOS daemon task. The application must provide an implementation of
vApplicationDaemonTaskStartupHook().
freertos_use_daemon_task_startup_hook:BOOL=OFF

// Defines configASSERT() to assist development and debugging.  The application can override the default implementation of vApplicationAssert( char *pcFile, uint32_t ulLine )
freertos_use_freertos_asserts:BOOL=ON

// Set to true to use mutex xSemaphoreGetMutexHolder API, or false to exclude it.
freertos_use_getmutex_holder:BOOL=ON

// Set to true for the kernel to call vApplicationIdleHook() on each iteration of the idle task.  The application must provide an implementation of vApplicationIdleHook().
freertos_use_idle_hook:BOOL=OFF

// Only used if a FreeRTOS memory manager (heap_n.c) is included in the project.  Set to true for the kernel to call vApplicationMallocFailedHookHook() if there is insufficient FreeRTOS heap available for a task, queue or semaphore to be created.  The application can override the default implementation of vApplicationMallocFailedHook().
freertos_use_malloc_failed_hook:BOOL=ON

// Set to true to include mutex functionality, or false to exclude mutex functionality.
freertos_use_mutexes:BOOL=ON

// When true each task will have its own Newlib reent structure.
freertos_use_newlib_reent:BOOL=OFF

// When true task selection will be faster at the cost of limiting the maximum number of unique priorities to 32.
freertos_use_port_optimized_task_selection:BOOL=ON

// The maximum interrupt priority from which interrupt safe FreeRTOS API calls can be made.
freertos_use_preemption:BOOL=ON

// Set to true to include queue set functionality.
freertos_use_queue_sets:BOOL=ON

// Set to true to include recursive mutex functionality, or false to exclude recursive mutex functionality.
freertos_use_recursive_mutexes:BOOL=ON

// Set to 1 to include the vTaskList() and vTaskGetRunTimeStats() functions, which format run-time data into human readable text.
freertos_use_stats_formatting_functions:BOOL=ON

// Set to 1 to create tasks without FPU context, set to 2 to have tasks with FPU context by default.
freertos_use_task_fpu_support:STRING=0x1

// Set to true to include direct to task notification functionality.
freertos_use_task_notifications:BOOL=ON

// Set to true for the kernel to call vApplicationTickHook() during each tick interrupt.
The application must provide an implementation of vApplicationTickHook().
freertos_use_tick_hook:BOOL=OFF

// Set to true to include software timer functionality, or false to exclude software timer functionality
freertos_use_timers:BOOL=ON

// When true equal priority ready tasks will share CPU time with a context switch on each tick interrupt.
freertos_use_timeslicing:BOOL=ON

// Set to true to include the legacy trace functionality, and a few other features.  traceMACROS are the preferred method of tracing now.
freertos_use_trace_facility:BOOL=ON

// Mode of operation for lwIP (RAW API/Sockets API)
lwip213_api_mode:STRING=SOCKET_API

// If enabled outgoing packets are queued during hardware address resolution.
lwip213_arp_queueing:STRING=1

// Number of active hardware address IP address pairs cached.
lwip213_arp_table_size:STRING=10

// Turn on lwIP Debug?
lwip213_debug:BOOL=OFF

// Turn on lwIP Debug?
lwip213_debug_options:BOOL=ON

// Size of TCP receive mbox queue.
lwip213_default_tcp_recvmbox_size:STRING=200

// Size of UDP receive mbox queue.
lwip213_default_udp_recvmbox_size:STRING=100

// Is DHCP required?
lwip213_dhcp:BOOL=OFF

// ARP check on offered addresses?
lwip213_dhcp_does_arp_check:BOOL=OFF

// Is DHCP required?
lwip213_dhcp_options:BOOL=ON

// Debug ICMP protocol
lwip213_icmp_debug:BOOL=OFF

// ICMP Options
lwip213_icmp_options:BOOL=ON

// ICMP TTL value
lwip213_icmp_ttl:STRING=255

// Debug IGMP protocol
lwip213_igmp_debug:BOOL=OFF

// IGMP Options
lwip213_igmp_options:BOOL=OFF

// Debug IP layer
lwip213_ip_debug:BOOL=OFF

// Global default TTL used by transport layers
lwip213_ip_default_ttl:STRING=255

// Enable forwarding IP packets across network interfaces.
lwip213_ip_forward:STRING=0

// Fragment outgoing IP packets if their size exceeds MTU
lwip213_ip_frag:STRING=1

// Assumed max MTU on any interface for IP frag buffer
lwip213_ip_frag_max_mtu:STRING=1500

// 1 = IP options are allowed (but not parsed). 0 = packets with IP options are dropped
lwip213_ip_options:STRING=0

// Reassembly PBUF Queue Length
lwip213_ip_reass_max_pbufs:STRING=128

// Reassemble incoming fragmented IP packets
lwip213_ip_reassembly:STRING=1

// IPv6 enable value
lwip213_ipv6_enable:BOOL=OFF

// IPv6 Options
lwip213_ipv6_options:BOOL=ON

// TCPIP input core locking
lwip213_lwip_tcpip_core_locking_input:BOOL=OFF

// Size of the heap memory (bytes).
lwip213_mem_size:STRING=131072

// Number of memp struct pbufs. Set this high if application sends lot of data out of ROM
lwip213_memp_n_pbuf:STRING=16

// Number of simultaneously active timeouts
lwip213_memp_n_sys_timeout:STRING=8

// Number of active TCP PCBs. One per active TCP connection
lwip213_memp_n_tcp_pcb:STRING=32

// Number of listening TCP connections
lwip213_memp_n_tcp_pcb_listen:STRING=8

// Number of simultaneously queued TCP segments
lwip213_memp_n_tcp_seg:STRING=256

// Number of active UDP PCBs. One per active UDP connection
lwip213_memp_n_udp_pcb:STRING=4

// Number of api msg structures (socket mode only)
lwip213_memp_num_api_msg:STRING=16

// Number of struct netbufs (socket mode only)
lwip213_memp_num_netbuf:STRING=8

// Number of struct netconns (socket mode only)
lwip213_memp_num_netconn:STRING=16

// Number of tcpip msg structures (socket mode only)
lwip213_memp_num_tcpip_msg:STRING=64

// Setting for RX Interrupt coalescing.
lwip213_n_rx_coalesce:STRING=1

// Number of RX Buffer Descriptors to be used in SDMA mode
lwip213_n_rx_descriptors:STRING=64

// Setting for TX Interrupt coalescing.
lwip213_n_tx_coalesce:STRING=1

// Number of TX Buffer Descriptors to be used in SDMA mode
lwip213_n_tx_descriptors:STRING=64

// Debug network interface layer
lwip213_netif_debug:BOOL=OFF

// Drops support for sys_timeout when NO_SYS==1
lwip213_no_sys_no_timers:BOOL=ON

// Debug pbuf layer
lwip213_pbuf_debug:BOOL=OFF

// Number of bytes that should be allocated for a link level header.
lwip213_pbuf_link_hlen:STRING=16

// Size of each pbuf in pbuf pool.
lwip213_pbuf_pool_bufsize:STRING=1700

// Number of buffers in pbuf pool.
lwip213_pbuf_pool_size:STRING=256

// Priority of threads in socket mode
lwip213_socket_mode_thread_prio:STRING=2

// Turn on lwIP statistics?
lwip213_stats:BOOL=OFF

// Turn on lwIP statistics?
lwip213_stats_options:BOOL=ON

// Debug sys arch layer
lwip213_sys_debug:BOOL=OFF

// Is TCP required ?
lwip213_tcp:BOOL=ON

// Debug TCP layer
lwip213_tcp_debug:BOOL=OFF

// Enable keepalive processing with default interval
lwip213_tcp_keepalive:BOOL=OFF

// TCP Maximum retransmission value
lwip213_tcp_maxrtx:STRING=12

// TCP Maximum segment size (bytes)
lwip213_tcp_mss:STRING=1460

// Is TCP required ?
lwip213_tcp_options:BOOL=ON

// Should TCP queue segments arriving out of order. Set to 0 if your device is low on memory
lwip213_tcp_queue_ooseq:STRING=1

// TCP sender buffer space (bytes)
lwip213_tcp_snd_buf:STRING=8192

// TCP Maximum SYN retransmission value
lwip213_tcp_synmaxrtx:STRING=4

// TCP TTL value
lwip213_tcp_ttl:STRING=255

// TCP Window (bytes)
lwip213_tcp_wnd:STRING=2048

// Size of TCPIP mbox queue.
lwip213_tcpip_mbox_size:STRING=200

// Zynq Ethernet Interface number
lwip213_temac_emac_number:STRING=0

// link speed as negotiated by the PHY
lwip213_temac_phy_link_speed:STRING=CONFIG_LINKSPEED_AUTODETECT

// Offload TCP and IP Receive checksum calculation (hardware support required)
lwip213_temac_tcp_ip_rx_checksum_offload:BOOL=OFF

// Offload TCP and IP Transmit checksum calculation (hardware support required)
lwip213_temac_tcp_ip_tx_checksum_offload:BOOL=OFF

// Offload TCP Receive checksum calculation (hardware support required)
lwip213_temac_tcp_rx_checksum_offload:BOOL=OFF

// Offload TCP Transmit checksum calculation (hardware support required)
lwip213_temac_tcp_tx_checksum_offload:BOOL=OFF

// use jumbo frames
lwip213_temac_use_jumbo_frames:BOOL=OFF

// Is UDP required
lwip213_udp:BOOL=ON

// Debug UDP layer
lwip213_udp_debug:BOOL=OFF

// UDP Options
lwip213_udp_options:BOOL=ON

// UDP TTL value
lwip213_udp_ttl:STRING=255

// Archiver
proc_archiver:STRING=arm-none-eabi-gcc-ar

// Assembler
proc_assembler:STRING=arm-none-eabi-gcc

// Compiler
proc_compiler:STRING=arm-none-eabi-gcc

// Compiler Flags
proc_compiler_flags:STRING= -O2 -DSDT -mcpu=cortex-a9 -mfpu=vfpv3 -mfloat-abi=hard;-c

// Extra Compiler Flags
proc_extra_compiler_flags:STRING= -g -Wall -Wextra -fno-tree-loop-distribute-patterns

// Enable fixed link for GEM SGMII at 1Gbps
sgmii_fixed_link:STRING=0

// stdin peripheral
standalone_stdin:STRING=ps7_uart_0

// stdout peripheral
standalone_stdout:STRING=ps7_uart_0

